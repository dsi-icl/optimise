# these are executed in order.  each must pass for the next to be run
stages:
  - smoke # this ensures a "user" install works properly
  - precache # warm up cache for default Node.js version
  - lint # lint code and docs
  - test # all tests

# defaults
dist: trusty
language: node_js
node_js: '10'
# `nvm install` happens before the cache is restored, which means
# we must install our own npm elsewhere (`~/npm`)
before_install: |
  [[ ! -x ~/npm/node_modules/.bin/npm ]] && {
    # caching feature creates `~/npm` for us
    cd ~/npm && npm install npm@latest
    cd -
  } || true
  # avoids bugs around https://github.com/travis-ci/travis-ci/issues/5092
  export PATH="~/npm/node_modules/.bin:$PATH"
# this avoids compilation in most cases (where we don't need it)
install:
  - npm --version
  - npm ci -g
  - knex migrate:latest && knex seed:run
  - cd ./db/exampleDataForTesting && knex seed:run && cd -

cache:
  directories:
    - ~/.npm # cache npm's cache
    - ~/npm # cache latest npm

env:
  - NODE_ENV=TEST

jobs:
  include:
    - script: npm test -- --coverage
      after_script: cat ./coverage/lcov.info | codacy-coverage --token $CODACY_COVERAGE_TOKEN

    - &node
      script: npm test
      node_js: '9'

    - <<: *node
      node_js: '8'

    - stage: lint
      script: npm run lint

    # smoke tests use default npm.
    - &smoke
      stage: smoke
      env: null
      before_install: true
      install:
        - npm install --production
      script: echo 'TODO - Should run small intantiation test'
      cache:
        directories:
          - ~/.npm
          - node_modules # npm install, unlike npm ci, doesn't wipe node_modules

    - <<: *smoke
      node_js: '9'

    - <<: *smoke
      node_js: '8'

    - stage: precache
      script: true

#notifications:
#  email: false
#  on_success: change
#  on_failure: always
