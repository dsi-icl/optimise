swagger: "2.0"
info:
  description: "REST-API documentation for OptimiseMS"
  version: "1.0.0"
  title: "OptimiseMS REST-API"
  license:
    name: "MIT License"
securityDefinitions:
  Cookie:
    type: apiKey
    name: cookie
    in: header
host: "localhost:3030"
basePath: "/"
security:
  - Cookie: []
paths:
  /users/login:
    post:
      summary: "User login"
      parameters:
        - in: "body"
          name: "userlogin"
          description: "User log-in credentials."
          schema:
            type: "object"
            required:
              - "username"
              - "pw"
            properties:
              username:
                type: "string"
              pw:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseMessage"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /users/logout:
    post:
      summary: "User logout"
      parameters:
        - in: "body"
          name: "userlogout"
          description: "Username to log-out."
          schema:
            type: "object"
            required:
              - "username"
            properties:
              username:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseMessage"
        "400":
          description: "You are not logged in. Please provide a valid token."
  /whoami:
    get:
      summary: "The logged in username"
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
            description: "The user"
        "404":
          description: "An unknown unicorn"
          schema:
            $ref: "#/definitions/Error"
  /users:
    post:
      summary: "Create a new user (admin only)"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "user"
          description: "User object that needs to be added to the users"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
        "401":
          description: "NORIGHTS"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
    put:
      summary: "Change a user password (self only)"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "userpwd"
          description: "New password for username"
          required: true
          schema:
            type: "object"
            properties:
              username:
                type: "string"
              pw:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: ""
        "401":
          description: "NORIGHTS"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
    delete:
      summary: "Delete a user (admin only)"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "delpatient"
        description: "Username to delete"
        required: true
        schema:
          type: "object"
          properties:
            username:
              type: "string"
              description: "The username to be deleted."
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
            description: "If user is deleted, returns 1. If no user is deleted, returns 0."
        "400":
          description: "DELETE FAIL OR MISSING ARGUMENTS"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
        "401":
          description: "NORIGHTS"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
    get:
      summary: "Get basic info about the user"
      parameters:
        - in: "query"
          name: "username"
          type: "string"
          description: "Get the user with the given username"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserBasicInfo"
        "400":
          description: "MISSING ARGUMENTS OR CREATION FAIL"
          schema:
            $ref: "#/definitions/Error"
  /export:
    get:
      summary: "Export the database as zip folder of csv files"
      produces:
      - "application/zip"
      responses:
        "200":
          description: "OK"
        "204":
          description: "There are no patient entries in the database."
        "400":
          description: "You are not logged in. Please provide a valid token."
  /patients:
    get:
      summary: "Get patient basic info"
      description: "If query string is not provided, then it returns all the patients. if query string 'id={id}' is provided, then it returns patients with id containing 'id'"
      produces: 
        - "application/json"
      parameters:
        - in: "query"
          name: "id"
          type: "string"
          description: "Get information for the patient(s) with IDs that contain id"
      responses:
        "200":
          description: "Basic information about the patient"
          schema:
            type: "array"
            description: "All patients if no query string, patients with IDs containing `id` if query string"
            items:
              $ref: "#/definitions/PatientBasicInfo"
        "400":
          description: "The query string can only have one parameter id"
        "404":
          description: "NOT FOUND"
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: "Create a new patient"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "newpatient"
          required: true
          schema:
            type: "object"
            properties:
              aliasId:
                type: "string"
              study:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "WRONG ARGUMENTS"
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: "Delete a patient (admin only)"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "delpatient" 
          required: true
          schema:
            type: "object"
            properties:
              aliasId:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
            description: "Number of rows affected"
        "400":
          description: "NO RIGHTS"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "NO RIGHTS"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "NOT FOUND"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Erase patient"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "erasepatientid"
          required: true
          schema:
            type: "object"
            properties:
              aliasId:
                type: "string"
      responses:
        "200":
          description: "Erasure completed. Check for any data retreivable if needed."
        "400":
          description: "Patient not erased"
        "403":
          description: "Sorry! Only admins are able to edit / delete data"
  /patientPii:
    post:
      summary: "Create patient PII"
      parameters:
        - in: "body"
          name: "pii"
          required: true
          schema:
            type: "object"
            properties:
              patient:
                type: "integer"
              firstName:
                type: "string"
              surname:
                type: "string"
              fullAddress:
                type: "string"
              postcode:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
              description: "the last created id"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    get:
      summary: "Get PII for all patients if no query string"
      parameters:
        - in: "query"
          name: "patient"
          type: "integer"
          description: "Patient id (integer)"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                patient:
                  type: "integer"
                firstName:
                  type: "string"
                surname:
                  type: "string"
                fullAddress:
                  type: "string"
                postcode:
                  type: "string"
                createdTime:
                  type: "string"
                createdByUser:
                  type: "string"
                deleted:
                  type: "string"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: "Edit PII"
      parameters:
        - in: "body"
          name: "newpii"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              firstName:
                type: "string"
              surname:
                type: "string"
              fullAddress:
                type: "string"
              postcode:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "BAD REQUEST"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete PII"
      parameters:
        - in: "body"
          name: "delpii"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
            description: "1 if patient PII is deleted successfully"
        "400":
          description: "Bad request or no rights"
          schema:
            $ref: "#/definitions/Error"
  /patientDiagnosis:
    post:
      summary: "Create patient diagnosis"
      parameters:
        - in: "body"
          name: "newpatientdiagnosis"
          required: true
          schema:
            type: "object"
            properties:
              patient:
                type: "integer"
              diagnosis:
                type: "integer"
              diagnosisDate:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    get:
      summary: "Get patient diagnosis"
      description: "Returns diagnoses of all patients if no query string."
      parameters:
        - in: "query"
          name: "patient"
          type: "integer"
          description: "The integer id of the patient to get the diagnosis of"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                patient:
                  type: "integer"
                diagnosis:
                  type: "integer"
                diagnosisDate:
                  type: "string"
                createdTime:
                  type: "string"
                createdByUser:
                  type: "integer"
                deleted:
                  type: "string"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: "Edit diagnosis"
      parameters:
        - in: "body"
          name: "newdiagnosis"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              diagnosis:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete patient diagnosis"
      parameters:
        - in: "body"
          name: "deldiagnosis"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /patientPregnancy:
    post:
      summary: "Create patient pregnancy"
      parameters:
        - in: "body"
          name: "newpatientpregnancy"
          required: true
          schema:
            type: "object"
            properties:
              patient:
                type: "integer"
              startDate:
                type: "string"
              outcome:
                type: "integer"
              outcomeDate:
                type: "string"
              meddra:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    get:
      summary: "Get patient pregnancy"
      description: "Returns pregnancies of all patients if no query string."
      parameters:
        - in: "query"
          name: "patient"
          type: "integer"
          description: "The integer id of the patient to get the pregnancy information for"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                patient:
                  type: "integer"
                diagnosis:
                  type: "integer"
                diagnosisDate:
                  type: "string"
                createdTime:
                  type: "string"
                createdByUser:
                  type: "integer"
                deleted:
                  type: "string"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: "Edit pregnancy"
      parameters:
        - in: "body"
          name: "newpregnancy"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              outcome:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete patient pregnancy"
      parameters:
        - in: "body"
          name: "delpregnancy"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /patients/{id}:
    get:
      summary: "Get patient information by id"
      description: "Get patient information by id. Return specified data sets if query string is provided (getOnly)"
      produces: 
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          type: "string"
          required: true
        - in: "query"
          name: "getOnly"
          type: "array"
          items:
            type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PatientProfile"
        "400":
          description: "BAD REQUEST"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "NOT FOUND"
          schema:
            $ref: "#/definitions/Error"
  /tests:
    post:
      summary: "Create a new test"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "newtest"
          required: true
          schema:
            type: "object"
            required:
              - "visitId"
              - "type"
              - "expectedDate"
            properties:
              visitId:
                type: "integer"
              type:
                type: "integer"
              expectedDate:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: "Delete a test (admin only)"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "deletetest"
          required: true
          schema:
            type: "object"
            required:
              - "testID"
            properties:
              testID:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "NO RIGHTS"
          schema:
            $ref: "#/definitions/Error"
  /tests/addOccurredDate:
    post:
      summary: "Add date of actual occurence of test"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "actualtestdate"
          required: true
          schema:
            type: "object"
            required:
              - "testId"
              - "actualOccurredDate"
            properties:
              testId:
                type: "integer"
              actualOccurredDate:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /visits:
    get:
      summary: "Get visit data for the specified patient"
      parameters:
        - in: "query"
          name: "patientId"
          type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PatientBasicVisitInfo"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: "Create a new visit"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "newvisit"
          required: true
          schema:
            type: "object"
            properties:
              patientId:
                type: "string"
              visitDate:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete a visit (admin only)"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "delvisit"
          required: true
          schema:
            type: "object"
            properties:
              visitId:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
            description: "The number of records affected"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /treatments:
    post:
      summary: "Create a new treatment"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "newtreatment"
          required: true
          schema:
            type: "object"
            properties:
              patient:
                type: "integer"
              visitId:
                type: "integer"
              drugId:
                type: "integer"
              dose:
                type: "integer"
              unit:
                type: "string"
              form:
                type: "string"
              timesPerDay:
                type: "integer"
              durationInWeeks:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
              description: "The id of the most recent entry"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: "Add termination date for treatment"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "terminationtrt"
          required: true
          schema:
            type: "object"
            properties:
              treatmentId:
                type: "integer"
              terminatedReason:
                type: "integer"
              terminationDate:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
    put:
      summary: "Edit a treatment"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "editstrt"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              orderedDuringVisit:
                type: "integer"
              drug:
                type: "integer"
              dose:
                type: "integer"
              unit:
                type: "string"
              form:
                type: "string"
              timesPerDay:
                type: "integer"
              durationWeeks:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
              description: "First insert id"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "NO RIGHTS"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete a treatment"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "deltrt"
          required: true
          schema:
            type: "object"
            properties:
              treatmentId:
                type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "NO RIGHTS"
          schema:
            $ref: "#/definitions/Error"
  /treatments/interrupt:
    post:
      summary: "Create treatment interruption"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "newtrtinterruption"
          required: true
          schema:
            type: "object"
            properties:
              treatmentId:
                type: "integer"
              start_date:
                type: "string"
              end_date:
                type: "string"
              reason:
                type: "integer"
              meddra:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete a treatment interruption"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "deltrtinterruption"
          required: true
          schema:
            type: "object"
            properties:
              treatmentInterId:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /treatments/drugs:
    get:
      summary: "Get drugs"
      parameters:
        - in: "query"
          name: "name"
          type: "string"
          description: "The name of treatment to search for"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                name:
                  type: "string"
                module:
                  type: "string"
        "404":
          description: "FAIL"
          schema:
            $ref: "#/definitions/Error"
  /clinicalEvents:
    post:
      summary: "Create a new clinical event"
      parameters:
        - in: "body"
          name: "newce"
          schema:
            type: "object"
            properties:
              patient:
                type: "integer"
              visitId:
                type: "integer"
              type:
                type: "integer"
              startDate:
                type: "string"
              meddra:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete a clinical event"
      parameters:
        - in: "body"
          name: "delce"
          schema:
            type: "object"
            properties:
              ceId:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "NO RIGHTS"
          schema:
            $ref: "#/definitions/Error"
  /available/visitFields:
    get:
      summary: "Get all visit fields"
      parameters:
        - in: "query"
          name: "module"
          type: "string"
          description: "An example value for module is MS"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Fields"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /available/testFields:
    get:
      summary: "Get all test fields"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Fields"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /available/clinicalEvents:
    get:
      summary: "Get all clinical event types"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Types"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /available/testTypes:
    get:
      summary: "Get all test types"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Types"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /available/diagnoses:
    get:
      summary: "Get all diagnosis options"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Types"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /data/visit:
    post:
      summary: "Add or update visit data. Update can only be done by an admin."
      parameters:
        - in: "body"
          name: "addupdatevisitdata"
          schema:
            type: "object"
            properties:
              visitId:
                type: "integer"
              add:
                type: "object"
              update:
                type: "object"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad request"
        "401":
          description: "No rights"
    delete:
      summary: "Delete visit data. Update can only be done by an admin."
      parameters:
        - in: "body"
          name: "deletevisitdata"
          schema:
            type: "object"
            properties:
              visitId:
                type: "integer"
              delete:
                type: "array"
                items:
                  type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "No rights"
  /data/test:
    post:
      summary: "Add or update test data. Update by admin only."
      parameters:
        - in: "body"
          name: "addupdatetestdata"
          schema:
            type: "object"
            properties:
              testId:
                type: "integer"
              add:
                type: "object"
              update:
                type: "object"
      responses:
        "200":
          description: "OK"
        "401":
          description: "No rights"
    delete:
      summary: "Delete test data. Update can only be done by an admin."
      parameters:
        - in: "body"
          name: "deletetestdata"
          schema:
            type: "object"
            properties:
              testId:
                type: "integer"
              delete:
                type: "array"
                items:
                  type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "No rights"
  /data/clinicalEvent:
    post:
      summary: "Add or update clinical event data. Update by admin only."
      parameters:
        - in: "body"
          name: "addupdatecedata"
          schema:
            type: "object"
            properties:
              clinicalEventId:
                type: "integer"
              add:
                type: "object"
              update:
                type: "object"
      responses:
        "200":
          description: "OK"
        "401":
          description: "No rights"
    delete:
      summary: "Delete clinical event data. Update can only be done by an admin."
      parameters:
        - in: "body"
          name: "deletecedata"
          schema:
            type: "object"
            properties:
              clinicalEventId:
                type: "integer"
              delete:
                type: "array"
                items:
                  type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "No rights"
  /demographics/Demographic:
    post:
      summary: "Create demographic entry"
      parameters:
        - in: "body"
          name: "demographicentry"
          schema:
            type: "object"
            properties:
              patient:
                type: "integer"
              DOB:
                type: "string"
              gender:
                type: "string"
              dominant_hand:
                type: "integer"
              ethnicity:
                type: "integer"
              country_of_origin:
                type: "integer"
              alcohol_usage:
                type: "integer"
              smoking_history:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete demographic entry"
      parameters:
        - in: "body"
          name: "deldemographicentry"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "No rights"
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: "Edit demographic data"
      parameters:
        - in: "body"
          name: "editdemographicentry"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              patient:
                type: "integer"
              gender:
                type: "string"
              dominant_hand:
                type: "integer"
              ethnicity:
                type: "integer"
              country_of_origin:
                type: "integer"
              alcohol_usage:
                type: "integer"
              smoking_history:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "No rights"
          schema:
            $ref: "#/definitions/Error"
  /demographics/Fields/Demographic:
    get:
      summary: "Get all demographic fields"
      parameters:
        - in: "query"
          name: "fieldName"
          type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/DemographicFields"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /demographics/Immunisation:
    post:
      summary: "Create immunisation"
      parameters:
        - in: "body"
          name: "createimmunisationdata"
          required: true
          schema:
            type: "object"
            properties:
              patient:
                type: "integer"
              vaccineName:
                type: "string"
              immunisationDate:
                $ref: "#/definitions/Date"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete immunisation"
      parameters:
        - in: "body"
          name: "deleteimmunisation"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "No rights"
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: "Edit immunisation data"
      parameters:
        - in: "body"
          name: "editimmunisationdata"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              patient:
                type: "string"
              vaccineName:
                type: "string"
              immunisationDate:
                $ref: "#/definitions/Date"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "No rights"
          schema:
            $ref: "#/definitions/Error"
  /demographics/MedicalCondition:
    post:
      summary: "Create medical condition"
      parameters:
        - in: "body"
          name: "createmedicalcondition"
          required: true
          schema:
            type: "object"
            properties:
              patient:
                type: "integer"
              relation:
                type: "string"
              conditionName:
                type: "string"
              startDate:
                $ref: "#/definitions/Date"
              outcome:
                type: "string"
              resolvedYear:
                type: "integer"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete medical condition"
      parameters:
        - in: "body"
          name: "createmedicalcondition"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "No rights"
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: "Edit medical condition"
      parameters:
        - in: "body"
          name: "editmedicalcondition"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              patient:
                type: "integer"
              relation:
                type: "string"
              conditionName:
                type: "string"
              startDate:
                $ref: "#/definitions/Date"
              outcome:
                type: "string"
              resolvedYear:
                type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "No rights"
          schema:
            $ref: "#/definitions/Error"
  /demographics/Fields/MedicalCondition:
    get:
      summary: "Get medical condition fields"
      parameters:
        - in: "query"
          name: "fieldName"
          type: "string"
          description: "Returns the specified field array"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/MedicalConditionFields"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /demographics/Pregnancy:
    post:
      summary: "Create pregnancy"
      parameters:
        - in: "body"
          name: "createpregnancydata"
          required: true
          schema:
            type: "object"
            properties:
              patient:
                type: "integer"
              vaccineName:
                type: "string"
              immunisationDate:
                $ref: "#/definitions/Date"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Delete pregnancy"
      parameters:
        - in: "body"
          name: "deletepregnancy"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "No rights"
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: "Edit pregnancy data"
      parameters:
        - in: "body"
          name: "editpregnancydata"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              patient:
                type: "string"
              vaccineName:
                type: "string"
              immunisationDate:
                $ref: "#/definitions/Date"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "integer"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "No rights"
          schema:
            $ref: "#/definitions/Error"
  /demographics/Fields/Pregnancy:
    get:
      summary: "Get pregnancy outcomes"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
  /logs:
    get:
      summary: "Get Actions Log"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                router:
                  type: "string"
                method:
                  type: "string"
                user:
                  type: "string"
                body:
                  type: "string"
                createdTime:
                  type: "string"
        "400":
          description: "You are not logged in. Please provide a valid token."
        "401":
          description: "NORIGHTS"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Unauthorized to do this action"
  /meddra:
    get:
      summary: "Get MedDRA"
      description: "Get all MedDRA low level terms or a subset based on the query string"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "search"
          type: "string"
          description: "low level term to search for"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                name:
                  type: "string"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
definitions:
  ResponseMessage:
    type: "object"
    properties:
      status:
        type: "string"
      message:
        type: "string"
  Error:
    type: "object"
    properties:
      error:
        type: "string"
      stack:
        type: "object"
        properties:
          error:
            type: "string"
  User:
    type: "object"
    properties:
      username:
        type: "string"
      pw:
        type: "string"
      isAdmin:
        type: "integer"
      realName:
        type: "string"
  UserBasicInfo:
    type: "object"
    properties:
      id:
        type: "integer"
      username:
        type: "string"
      realname:
        type: "string"
  PatientBasicInfo:
    type: "object"
    properties:
      patientId:
        type: "integer"
      aliasId:
        type: "string"
      study:
        type: "string"
      DOB:
        type: "string"
      gender:
        type: "integer"
  PatientBasicVisitInfo:
    type: "object"
    properties:
      patientId:
        type: "integer"
      aliasId:
        type: "string"
      visitId:
        type: "integer"
      visitDate:
        type: "string"
  PatientProfile:
    type: "object"
    properties:
      patientId:
        type: "string"
      id:
        type: "integer"
      demographicData:
        $ref: "#/definitions/Demographic"
      immunisations:
        type: "array"
        items:
          $ref: "#/definitions/Immunisation"
      medicalHistory:
        type: "array"
        items:
          $ref: "#/definitions/MedicalHistory"
      visits:
        type: "array"
        items:
          $ref: "#/definitions/Visit"
      tests:
        type: "array"
        items:
          $ref: "#/definitions/Test"
      treatments:
        type: "array"
        items:
          $ref: "#/definitions/Treatment"
      clinicalEvents:
        type: "array"
        items:
          $ref: "#/definitions/ClinicalEvent"
      pregnancy:
        type: "array"
        items:
          $ref: "#/definitions/Pregnancy"
  Demographic:
    type: "object"
    properties:
      DOB:
        type: "string"
      gender:
        type: "integer"
      dominantHand:
        type: "integer"
      ethnicity:
        type: "integer"
      countryOfOrigin:
        type: "integer"
      alcoholUsage:
        type: "integer"
      smokingHistory:
        type: "integer"
  Immunisation:
    type: "object"
    properties:
      vaccineName:
        type: "string"
      immunisationDate:
        type: "string"
  MedicalHistory:
    type: "object"
    properties:
      relation:
        type: "integer"
      conditionName:
        type: "integer"
      startDate:
        type: "string"
      outcome:
        type: "string"
      resolvedYear:
        type: "integer"
  Visit:
    type: "object"
    properties:
      visitId:
        type: "integer"
      visitDate:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Data"
  Test:
    type: "object"
    properties:
      testId:
        type: "integer"
      orderedDuringVisit:
        type: "integer"
      type:
        type: "integer"
      expectedOccurDate:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Data"
  Treatment:
    type: "object"
    properties:
      id:
        type: "integer"
      orderedDuringVisit:
        type: "integer"
      drug:
        type: "integer"
      dose:
        type: "integer"
      unit:
        type: "string"
      form:
        type: "string"
      timesPerDay:
        type: "string"
      durationWeeks:
        type: "integer"
      terminatedDate:
        type: "string"
      terminatedReason:
        type: "integer"
      interruptions:
        type: "array"
        items:
          $ref: "#/definitions/Interruption"
  Interruption:
    type: "object"
    properties:
      reason:
        type: "integer"
      startDate:
        type: "string"
      endDate:
        type: "string"
      meddra:
        type: "integer"
  ClinicalEvent:
    type: "object"
    properties:
      id:
        type: "integer"
      recordedDuringVisit:
        type: "integer"
      type:
        type: "integer"
      dateStartDate:
        type: "string"
      endDate:
        type: "string"
      meddra:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Data"
  Pregnancy:
    type: "object"
    properties:
      id:
        type: "integer"
      patient:
        type: "integer"
      startDate:
        type: "string"
      outcome:
        type: "integer"
      outcomeDate:
        type: "string"
      meddra:
        type: "integer"
  Data:
    type: "object"
    properties:
      field:
        type: "integer"
      value:
        type: "string"
  Fields:
    type: "object"
    properties:
      id:
        type: "integer"
      definition:
        type: "string"
      idname:
        type: "string"
      type:
        type: "integer"
      unit:
        type: "string"
      module:
        type: "string"
      permittedValues:
        type: "string"
      referenceType:
        type: "integer"
      deleted:
        type: "string"
  Types:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
  IdValue:
    type: "object"
    properties:
      id:
        type: "integer"
      value:
        type: "string"
  DemographicFields:
    type: "object"
    properties:
      genders:
        type: "array"
        items:
          $ref: "#/definitions/IdValue"
      dominant_hands:
        type: "array"
        items:
          $ref: "#/definitions/IdValue"
      ethnicities:
        type: "array"
        items:
          $ref: "#/definitions/IdValue"
      countries:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
            country:
              type: "string"
      alcohol_usage:
        type: "array"
        items:
          $ref: "#/definitions/IdValue"
      smoking_history:
        type: "array"
        items:
          $ref: "#/definitions/IdValue"
  MedicalConditionFields:
    type: "object"
    properties:
      relations:
        type: "array"
        items:
          $ref: "#/definitions/IdValue"
      conditions:
        type: "array"
        items:
          $ref: "#/definitions/IdValue"
  Date:
    type: "object"
    properties:
      day:
        type: "integer"
      month:
        type: "integer"
      year:
        type: "integer"